---
import Layout from '../layouts/Layout.astro';
import { HeaderWrapper } from '../components/layout/HeaderWrapper';
import { Footer } from '../components/layout/Footer';
import { ProductCard } from '../components/products/ProductCard';

// Fetch data from API endpoints
let products = [];
let categories = [];

try {
  const [productsRes, categoriesRes] = await Promise.all([
    fetch(`${Astro.url.origin}/api/products`),
    fetch(`${Astro.url.origin}/api/categories`)
  ]);

  if (productsRes.ok) products = await productsRes.json();
  if (categoriesRes.ok) categories = await categoriesRes.json();
} catch (error) {
  console.error('Error fetching data:', error);
}
---

<Layout title="Products - Nani Bakery">
  <HeaderWrapper client:load />
  
  <main class="min-h-screen bg-gray-50">
    <!-- Page Header -->
    <section class="bg-white border-b">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <h1 class="text-4xl font-display font-bold text-gray-900 mb-4">
          Our Products
        </h1>
        <p class="text-xl text-gray-600 max-w-2xl">
          Discover our full range of freshly baked goods, from artisan breads to custom cakes
        </p>
      </div>
    </section>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div class="flex flex-col lg:flex-row gap-8">
        <!-- Sidebar Filters -->
        <aside class="lg:w-64 flex-shrink-0">
          <div class="bg-white rounded-lg shadow-sm p-6 sticky top-8">
            <h3 class="font-semibold text-gray-900 mb-4">Categories</h3>
            <div class="space-y-2">
              <label class="flex items-center">
                <input type="radio" name="category" value="" class="text-primary-600 focus:ring-primary-500" checked>
                <span class="ml-2 text-gray-700">All Products</span>
              </label>
              {categories?.map((category) => (
                <label key={category.id} class="flex items-center">
                  <input type="radio" name="category" value={category.id} class="text-primary-600 focus:ring-primary-500">
                  <span class="ml-2 text-gray-700">{category.name}</span>
                </label>
              ))}
            </div>
            
            <hr class="my-6">
            
            <h3 class="font-semibold text-gray-900 mb-4">Price Range</h3>
            <div class="space-y-2">
              <label class="flex items-center">
                <input type="checkbox" class="text-primary-600 focus:ring-primary-500">
                <span class="ml-2 text-gray-700">Under $10</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" class="text-primary-600 focus:ring-primary-500">
                <span class="ml-2 text-gray-700">$10 - $25</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" class="text-primary-600 focus:ring-primary-500">
                <span class="ml-2 text-gray-700">$25 - $50</span>
              </label>
              <label class="flex items-center">
                <input type="checkbox" class="text-primary-600 focus:ring-primary-500">
                <span class="ml-2 text-gray-700">Over $50</span>
              </label>
            </div>
          </div>
        </aside>

        <!-- Products Grid -->
        <div class="flex-1">
          <div class="flex items-center justify-between mb-6">
            <p class="text-gray-600">
              Showing {products?.length || 0} products
            </p>
            <select class="border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500">
              <option>Sort by: Featured</option>
              <option>Price: Low to High</option>
              <option>Price: High to Low</option>
              <option>Name: A to Z</option>
              <option>Newest First</option>
            </select>
          </div>

          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {products?.map((product) => (
              <ProductCard 
                key={product.id}
                product={product}
                client:load
              />
            ))}
          </div>

          {(!products || products.length === 0) && (
            <div class="text-center py-12">
              <div class="text-gray-400 mb-4">
                <svg class="mx-auto h-16 w-16" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2M4 13h2m13-8V4a1 1 0 00-1-1H7a1 1 0 00-1 1v1m8 0V4a1 1 0 00-1-1H9a1 1 0 00-1 1v1" />
                </svg>
              </div>
              <h3 class="text-lg font-medium text-gray-900 mb-2">No products found</h3>
              <p class="text-gray-600">Try adjusting your filters or check back later for new items.</p>
            </div>
          )}
        </div>
      </div>
    </div>
  </main>
  
  <Footer />
</Layout>